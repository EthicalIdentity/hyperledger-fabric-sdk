# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: orderer/ab.proto for package 'orderer'
# Original file comments:
#
# Copyright IBM Corp. 2016 All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require 'grpc'
require 'orderer/ab_pb'

module Orderer
  module AtomicBroadcast
    class Service

      include GRPC::GenericService

      self.marshal_class_method = :encode
      self.unmarshal_class_method = :decode
      self.service_name = 'orderer.AtomicBroadcast'

      # broadcast receives a reply of Acknowledgement for each common.Envelope in order, indicating success or type of failure
      rpc :Broadcast, stream(Common::Envelope), stream(BroadcastResponse)
      # deliver first requires an Envelope of type DELIVER_SEEK_INFO with Payload data as a mashaled SeekInfo message, then a stream of block replies is received.
      rpc :Deliver, stream(Common::Envelope), stream(DeliverResponse)
    end

    Stub = Service.rpc_stub_class
  end
end
